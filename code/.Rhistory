header = TRUE)
us_expo_hmd <- read.table(paste(path, "USAExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
us_expo_cohort_hmd <- read.table(paste(path, "USAcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
# SSA dataset:
# will load later
countries <- c("fra", "dnk", "swe", "nor", "us")
# drop cases without 1x1 counts, with unknown age deaths, & with lexis rectangles rather than triangles
cleaned_deaths_list <- list()
for (country in countries) {
data <- get(paste(country, "deaths_hmd", sep = '_'))
years_to_remove <- data |>
filter(
(AgeInterval != "1" & AgeInterval != "+") |
YearInterval != 1 |
Age == "UNK" |
Age == "TOT" |
(Lexis != "TL" & Lexis != "TU") |
LDB != 1
) |>
pull(Year)
cleaned_deaths_list[[country]] <- data |>
filter(!(Year %in% years_to_remove))
}
# US has 0 cases left after this filtering - I think I'll just try to use SSA data instead of HMD
cleaned_deaths_list <- cleaned_deaths_list[-5]
countries <- c("fra", "dnk", "swe", "nor")
# get period death counts
df_with_period <- lapply(cleaned_deaths_list, function(data) {
data |>
group_by(Age, Year, Sex) |>
mutate(Period_Deaths = sum(Deaths)) |>
ungroup()
})
# get cohort death counts
df_with_cohort <- lapply(df_with_period, function(data) {
data %>%
arrange(Age, Sex, Year, Lexis) |>
group_by(Age, Sex) |>
mutate(TL_Deaths = if_else(Lexis == "TL", Deaths, NA_real_)) |>
mutate(TU_Deaths_Next_Year = if_else(Lexis == "TU", lead(Deaths, 2), NA_real_)) |>
mutate(TU_Deaths_Next_Year = lead(TU_Deaths_Next_Year)) |>
mutate(Cohort_Deaths = TL_Deaths + TU_Deaths_Next_Year) |>
ungroup()
})
# delete extra rows and columns
death_data <- lapply(df_with_cohort, function(data) {
data |>
filter(Lexis == "TL")  |>
select(-TL_Deaths, -TU_Deaths_Next_Year)
})
combine_expo_death_data <- function(death_data, expo_data) {
expo_long <- pivot_longer(expo_data, cols = c('Female', 'Male', 'Total'),
names_to = "Sex", values_to = "Exposure")
expo_long <- expo_long |>
mutate(Sex = ifelse(Sex == "Female", "f",
ifelse(Sex == "Male", "m",
ifelse(Sex == "Total", "b", Sex)))) |>
mutate(Age = ifelse(Age == "110+", "110", Age)) |>
mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex)) |>
filter(!Sex == 'b')
deaths <- death_data |>
select(Year, Age, Sex, Period_Deaths, Cohort_Deaths) |>
mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex))
print(head(deaths))
combined_df <- deaths |>
full_join(expo_long, by = c("Year", "Age", "Sex"))
print(head(combined_df))
return(combined_df)
}
hmd_list <- list()
for (country in countries) {
exposure <- get(paste(country, "expo_hmd", sep = '_'))
deaths <- death_data[[country]]
combined_data <- combine_expo_death_data(deaths, exposure)
combined_data <- combined_data |>
filter(!is.na(Period_Deaths))
hmd_list[[country]] <- combined_data
}
merge_data_list <- function(data_list) {
# add a column to each dataframe to identify the country
data_list <- lapply(names(data_list), function(country) {
df <- data_list[[country]]
df$country <- country
return(df)
})
merged_data <- do.call(rbind, data_list)
}
hmd_period_data <- merge_data_list(hmd_list)
prep_period_idl <- function(idl_data) {
cleaned_data <- idl_data |>
group_by(DEATH_YEAR, AGEYEARS, SEX) |>
summarise(Deaths = n())
return(cleaned_data)
}
idl_period_list <- list()
for (country in countries) {
data <- get(paste(country, "idl", sep = '_'))
cleaned_data <- prep_period_idl(data)
idl_period_list[[country]] <- cleaned_data
}
idl_period_data <- merge_data_list(idl_period_list)
create_period_val_data <- function(hmd_period_data, idl_period_data) {
idl_data <- idl_data |>
rename(
Year = DEATH_YEAR,
Sex = SEX,
Age = AGEYEARS
) |>
mutate(Sex = ifelse(Sex == "F", "f",
ifelse(Sex == "M", "m", Sex)))
print(head(idl_data))
joined_data <- hmd_data |>
left_join(idl_data, by = c("Year", "country", "Sex", "Age"))
print(head(joined_data))
# replace Deaths values in hmd_data with those from idl_data
joined_data <- joined_data |>
mutate(Period_Deaths = if_else(!is.na(Deaths), Deaths, Period_Deaths)) |>
select(-Deaths, -Cohort_Deaths)
print(head(joined_data))
return(joined_data)
}
period_val <- create_period_val_data(hmd_period_data, idl_period_data)
hmd_list <- list()
for (country in countries) {
exposure <- get(paste(country, "expo_cohort_hmd", sep = '_'))
deaths <- death_data[[country]]
combined_data <- combine_expo_death_data(deaths, exposure)
combined_data <- combined_data |>
filter(!is.na(Cohort_Deaths))
hmd_list[[country]] <- combined_data
}
hmd_cohort_data <- merge_data_list(hmd_list)
prep_cohort_idl <- function(idl_data) {
cleaned_data <- idl_data |>
group_by(BIRTH_YEAR, AGEYEARS, SEX, DEATH_YEAR) |>
summarise(Deaths = n())
return(cleaned_data)
}
idl_cohort_list <- list()
for (country in countries) {
data <- get(paste(country, "idl", sep = '_'))
cleaned_data <- prep_cohort_idl(data)
idl_cohort_list[[country]] <- cleaned_data
}
idl_cohort_data <- merge_data_list(idl_cohort_list)
create_cohort_val_data <- function(hmd_cohort_data, idl_cohort_data) {
}
period_val <- period_val |>
filter(Age >= 80)
cohort_val <- cohort_val |>
filter(Age >= 80)
View(hmd_period_data)
View(hmd_cohort_data)
View(idl_data)
View(fra_idl)
View(dnk_idl)
create_cohort_val_data <- function(hmd_cohort_data, idl_cohort_data) {
}
create_cohort_val_data <- function(hmd_cohort_data, idl_cohort_data) {
}
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
# write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(path, "period_validation_data.csv", sep='/'))
View(period_data)
View(hmd_period_data)
period_val <- period_val |>
filter(Age >= 80) |>
arrange(Year, Age)
# cohort_val <- cohort_val |>
#   filter(Age >= 80)
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
# write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(path, "period_validation_data.csv", sep='/'))
# fit all models using HMD fitting procedure
kannisto_fit <- fit_kannisto(init_param_fn=get_inital_params,
log_lik_fn=log_lik_fn,
grad_fn=kannisto_get_grad,
fn=kannisto_fn,
data=data)
# logistic_fit <- fit_logistic(data)
View(kannisto_fit)
View(aus_deaths)
View(period_data)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
library(here)
library(tidyverse)
path <- here("code")
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(path, "period_validation_data.csv", sep='/'))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
# fit all models using HMD fitting procedure
# not currently working.. returning one set of mortality rates for one year (need smoothed set for every year, country, sex)
kannisto_fit <- fit_all_kannisto(period_data)
View(period_data)
period_val <- period_val |>
filter(Age >= 80) |>
arrange(Year, Age) |>
rename(Deaths = Period_Deaths)
# cohort_val <- cohort_val |>
#   filter(Age >= 80)
View(period_val)
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
# write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
View(period_val)
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
# write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
View(period_data)
View(period_val)
View(period_data)
path <- here("data")
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
# write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
# fit all models using HMD fitting procedure
# not currently working.. returning one set of mortality rates for one year (need smoothed set for every year, country, sex)
kannisto_fit <- fit_all_kannisto(period_data)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
library(here)
library(tidyverse)
path <- here("code")
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
# fit all models using HMD fitting procedure
# not currently working.. returning one set of mortality rates for one year (need smoothed set for every year, country, sex)
kannisto_fit <- fit_all_kannisto(period_data)
# logistic_fit <- fit_logistic(data)
View(kannisto_fit)
kannisto_fit$fitted_rates
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest(fitted_rates)
View(fitted_data)
fitted_data <- kannisto_fit %>%
filter(Year == 2005, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest(fitted_rates)
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
View(kannisto_fit)
View(kannisto_fit)
kannisto_fit$fitted_rates
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# load in prepared data (for oldest ages only)
data_path <- here("data")
period_data <- read_csv(paste(data_path, "period_validation_data.csv", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest(cols = c(fitted_rates))
View(fitted_data)
colnames(fitted_data)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
View(fitted_data)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest(cols = c(fitted_rates), names_repair = "universal")
View(fitted_data)
# source and test functions
source(paste(path, "model_fitting_functions.R", sep='/'))
test_file(paste(path, "unit_testing.R", sep='/'))
# Kannisto
year_to_plot <- 2000
country_to_plot <- "fra"
sex_to_plot <- "f"
plot_original_vs_fitted(period_data, kannisto_fit, year_to_plot, country_to_plot, sex_to_plot)
fitted_data <- kannisto_fit %>%
filter(Year == year, country == country, Sex == sex) %>%
select(fitted_rates) %>%
unnest(cols = c(fitted_rates), names_sep = "_")
View(kannisto_fit)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest(cols = c(fitted_rates), names_sep = "_")
View(fitted_data)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest_longer(cols = c(fitted_rates))
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
unnest_longer(col = c(fitted_rates))
View(fitted_data)
kannisto_fit$fitted_rates
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates)
View(fitted_data)
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
hoist(c("x", "Mx"))
fitted_data <- kannisto_fit %>%
filter(Year == 2000, country == "fra", Sex == "f") %>%
select(fitted_rates) %>%
hoist(fitted_rates, c("x", "Mx"))
prep_cohort_idl <- function(idl_data) {
cleaned_data <- idl_data |>
group_by(BIRTH_YEAR, AGEYEARS, SEX) |>
summarise(Deaths = n())
return(cleaned_data)
}
idl_cohort_list <- list()
for (country in countries) {
data <- get(paste(country, "idl", sep = '_'))
cleaned_data <- prep_cohort_idl(data)
idl_cohort_list[[country]] <- cleaned_data
}
idl_cohort_data <- merge_data_list(idl_cohort_list)
View(idl_cohort_data)
View(idl_data)
View(swe_idl)
path <- here("data")
# idl datasets:
fra_idl <- read.table(paste(path, "idl_fra_death_105.txt", sep='/'), sep=';',
header = TRUE)
dnk_idl <- read.table(paste(path, "idl_dnk_death_105.txt", sep='/'), sep=';',
header = TRUE)
nor_idl <- read.table(paste(path, "idl_nor_death_105.txt", sep='/'), sep=';',
header = TRUE)
swe_idl <- read.table(paste(path, "idl_swe_death_105.txt", sep='/'), sep=';',
header = TRUE)
us_idl <- read.table(paste(path, "idl_usa_death_105.txt", sep='/'), sep=';',
header = TRUE)
# hmd datasets:
fra_deaths_hmd <- read.table(paste(path, "FRATNPdeath.txt", sep='/'), sep=',',
header = TRUE)
fra_expo_hmd <- read.table(paste(path, "FRAExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
fra_expo_cohort_hmd <- read.table(paste(path, "FRAcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
dnk_deaths_hmd <- read.table(paste(path, "DNKdeath.txt", sep='/'), sep=',',
header = TRUE)
dnk_expo_hmd <- read.table(paste(path, "DNKExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
dnk_expo_cohort_hmd <- read.table(paste(path, "DNKcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
nor_deaths_hmd <- read.table(paste(path, "NORdeath.txt", sep='/'), sep=',',
header = TRUE)
nor_expo_hmd <- read.table(paste(path, "NORExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
nor_expo_cohort_hmd <- read.table(paste(path, "NORcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
swe_deaths_hmd <- read.table(paste(path, "SWEdeath.txt", sep='/'), sep=',',
header = TRUE)
swe_expo_hmd <- read.table(paste(path, "SWEExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
swe_expo_cohort_hmd <- read.table(paste(path, "SWEcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
us_deaths_hmd <- read.table(paste(path, "USAdeath.txt", sep='/'), sep=',',
header = TRUE)
us_expo_hmd <- read.table(paste(path, "USAExposures_1x1.txt", sep='/'), sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
us_expo_cohort_hmd <- read.table(paste(path, "USAcExposures_1x1.txt", sep='/'),
sep='',
header = TRUE, stringsAsFactors = FALSE, skip = 2)
# SSA dataset:
# will load later
View(idl_cohort_data)
View(hmd_cohort_data)
prep_cohort_hmd <- function(hmd_data) {
hmd_cohort_data <- hmd_data |>
mutate(Birth_Year = Year - Age)
}
hmd_list <- list()
for (country in countries) {
exposure <- get(paste(country, "expo_cohort_hmd", sep = '_'))
deaths <- death_data[[country]]
combined_data <- combine_expo_death_data(deaths, exposure)
combined_data <- combined_data |>
filter(!is.na(Cohort_Deaths)) |>
mutate(Birth_Year = Year - Age) # adding birth year column
hmd_list[[country]] <- combined_data
}
hmd_cohort_data <- merge_data_list(hmd_list)
hmd_list <- list()
for (country in countries) {
exposure <- get(paste(country, "expo_cohort_hmd", sep = '_'))
deaths <- death_data[[country]]
combined_data <- combine_expo_death_data(deaths, exposure)
combined_data <- combined_data |>
filter(!is.na(Cohort_Deaths)) |>
filter(!is.na(Exposure)) |>
mutate(Birth_Year = Year - Age) # adding birth year column
hmd_list[[country]] <- combined_data
}
hmd_cohort_data <- merge_data_list(hmd_list)
hmd_list <- list()
for (country in countries) {
exposure <- get(paste(country, "expo_cohort_hmd", sep = '_'))
deaths <- death_data[[country]]
combined_data <- combine_expo_death_data(deaths, exposure)
combined_data <- combined_data |>
filter(!is.na(Cohort_Deaths)) |>
filter(!is.na(Exposure)) |>
mutate(Birth_Year = (Year - Age)) # adding birth year column
hmd_list[[country]] <- combined_data
}
hmd_cohort_data <- merge_data_list(hmd_list)
View(hmd_cohort_data)
View(idl_cohort_data)
create_cohort_val_data <- function(hmd_data, idl_data) {
idl_data <- idl_data |>
rename(
Birth_Year = BIRTH_YEAR,
Sex = SEX,
Age = AGEYEARS
) |>
mutate(Sex = ifelse(Sex == "F", "f",
ifelse(Sex == "M", "m", Sex)))
print(head(idl_data))
joined_data <- hmd_data |>
left_join(idl_data, by = c("Birth_Year", "country", "Sex", "Age"))
print(head(joined_data))
# replace Deaths values in hmd_data with those from idl_data
joined_data <- joined_data |>
mutate(Cohort_Deaths = if_else(!is.na(Deaths), Deaths, Cohort_Deaths)) |>
select(-Deaths, -Period_Deaths)
print(head(joined_data))
return(joined_data)
}
cohort_val <- create_cohort_val_data(hmd_cohort_data, idl_cohort_data)
period_val <- period_val |>
filter(Age >= 80) |>
arrange(Year, Age) |>
rename(Deaths = Period_Deaths)
