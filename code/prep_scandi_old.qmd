---
title: "Prepare Scandi Data"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
```

Load and clean Swedish data

```{r}
path <- here("data", "SWEdeath_full_count.csv") 
swe_full_count <- read.csv(path, header = TRUE, sep = ",")
```

```{r}
years_to_remove <- swe_full_count |>
  filter(AgeInterval != "1" & AgeInterval != "+" & AgeInterval != ".") |>
  filter(Lexis != "TL" & Lexis != "TU") |>
  filter(Age != "80") |>
  pull(unique(Year))

cleaned_data <- swe_full_count |>
  filter(!(Year %in% years_to_remove)) |>
  #filter(Lexis != "VV", Lexis != "RR") |>
  filter(Age != "TOT")
```

Distribute unknown

```{r}
data <- cleaned_data |>
    group_by(Year) |>
    mutate(
      Deaths_with_unk = case_when(
        Lexis == "TL" & any(Age == "UNK") ~ Deaths + 
          (sum(Deaths[Age == "UNK"]) * 
            (Deaths / (sum(Deaths[Age != "UNK" & Lexis == "TL"], na.rm = TRUE) + 
                       sum(Deaths[Age != "UNK" & Lexis == "TU"], na.rm = TRUE)))),
        Lexis == "TU" & any(Age == "UNK") ~ Deaths + 
          (sum(Deaths[Age == "UNK"]) * 
            (Deaths / (sum(Deaths[Age != "UNK" & Lexis == "TU"], na.rm = TRUE) + 
                       sum(Deaths[Age != "UNK" & Lexis == "TL"], na.rm = TRUE)))),
        !any(Age == "UNK") ~ Deaths,
        TRUE ~ Deaths
      )
    ) |>
    ungroup()

data <- data |>
    filter(Age != "UNK") |>
    rename(Deaths_without_unk = Deaths, Deaths = Deaths_with_unk)
```

Calculate cohort deaths

```{r}
cohort_data <- data |>
    arrange(Age, Sex, Year, Lexis) |>
    group_by(Age, Sex) |>
    mutate(TL_Deaths = if_else(Lexis == "TL", Deaths, NA_real_)) |>
    mutate(TU_Deaths_Next_Year = if_else(Lexis == "TU" & 
                                           (lead(Year, 2) == Year + 1), 
                                         lead(Deaths, 2), NA_real_)) |>
    mutate(TU_Deaths_Next_Year = lead(TU_Deaths_Next_Year)) |>
    mutate(VH_Deaths = if_else(Lexis == "VH", Deaths, NA_real_)) |>
    mutate(Cohort_Deaths = if_else(is.na(VH_Deaths), 
                                   TL_Deaths + TU_Deaths_Next_Year, VH_Deaths)) |>
    ungroup()  
```

Cleaning and creating cohort variable

```{r}
swe <- cohort_data |>
  filter(Lexis == "TL" | Lexis == "VH") |>
  select(Year, Age, Sex, Cohort_Deaths, TL_Deaths, TU_Deaths_Next_Year) |>
  mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex)) |>
  mutate(Cohort = (Year - Age)) |>
  mutate(Country = "swe")
```

Prepare Lexis files from other Scandi countries

```{r}
path <- here("data", "dnk_deaths_lexis.txt") 
dnk <- read.table(path, sep='', header = TRUE,
                             stringsAsFactors = FALSE, skip = 2)

path <- here("data", "nor_deaths_lexis.txt") 
nor <- read.table(path, sep='', header = TRUE,
                             stringsAsFactors = FALSE, skip = 2)

path <- here("data", "fin_deaths_lexis.txt") 
fin <- read.table(path, sep='', header = TRUE,
                             stringsAsFactors = FALSE, skip = 2)
```

```{r}
dnk <- dnk |>
  mutate(Country = "dnk")
nor <- nor |>
  mutate(Country = "nor")
fin <- fin |>
  mutate(Country = "fin")
```

```{r, warning=FALSE}
non_swe <- bind_rows(fin, nor, dnk)

non_swe <- non_swe |>
  pivot_longer(cols = c('Female', 'Male', 'Total'),
                               names_to = "Sex", values_to = "Deaths") |>
  mutate(Sex = ifelse(Sex == "Female", "f", 
                      ifelse(Sex == "Male", "m", 
                              ifelse(Sex == "Total", "b", Sex)))) |>
  filter(Sex != "b") |>
  mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex),
            Cohort = as.integer(Cohort)) |>
  mutate(Lexis = if_else(Year - Age == Cohort, "TL", "TU")) |>
  mutate(Age = ifelse(Age == "110+", "110", Age)) |>
  filter(!Cohort == ".") 

non_swe <- non_swe |>
  arrange(Country, Age, Sex, Year, Lexis) |>
  group_by(Age, Sex, Country) |>
  mutate(TL_Deaths = if_else(Lexis == "TL", Deaths, NA_real_)) |>
  mutate(TU_Deaths_Next_Year = if_else(Lexis == "TU" & 
                                         (lead(Year, 2) == Year + 1), 
                                       lead(Deaths, 2), NA_real_)) |>
  mutate(TU_Deaths_Next_Year = lead(TU_Deaths_Next_Year)) |>
  mutate(Cohort_Deaths = TL_Deaths + TU_Deaths_Next_Year) |>
  ungroup() |>
  filter(Lexis == "TL") |>
  select(-Lexis, -Deaths)
```

```{r}
scandi <- bind_rows(non_swe, swe)
```

Add exact ages for 110+ from IDL

```{r}
path <- here("data") 

dnk_idl <- read.table(paste(path, "idl_dnk_death_105.txt", sep='/'), sep=';', 
                          header = TRUE)
nor_idl <- read.table(paste(path, "idl_nor_death_105.txt", sep='/'), sep=';', 
                         header = TRUE)
swe_idl <- read.table(paste(path, "idl_swe_death_105.txt", sep='/'), sep=';', 
                         header = TRUE)
```

Extinct cohort method

```{r}
# get population counts by summing all future deaths for the cohort 
extinct_cohorts <- scandi |>
  filter(Age >= 79) |>
  filter(!is.na(Cohort_Deaths)) |>
  group_by(Cohort, Sex, Country) |>
  arrange(Cohort, Age) |>
  mutate(Population = purrr::map_dbl(Age, ~ sum(Cohort_Deaths[Age >= .x]))) |>
  ungroup()

check_accuracy <- extinct_cohorts |>
  filter(Cohort == 1880, Sex == "f")
```

```{r}
cohort_prev_year <- extinct_cohorts |>
  group_by(Sex, Country)|>
  arrange(Age, Year) |>
  mutate(TL_Deaths_Prev_Year = lag(TL_Deaths)) |>
  mutate(TU_Deaths_Same_Year = lag(TU_Deaths_Next_Year)) |>
  ungroup()
```

```{r}
# calculate person-years-lived from population 
extinct_cohorts <- cohort_prev_year |>
  group_by(Cohort, Sex, Country) |>
  mutate(Exposure = pmax(0, Population + 1/3*(TL_Deaths_Prev_Year - TU_Deaths_Same_Year))) |>
  mutate(Exposure = if_else(Population == 0 | is.na(Exposure), 0, Exposure)) |>
  ungroup() |>
  filter(Age >= 80) 

check_accuracy <- extinct_cohorts |>
  filter(Cohort == 1876, Sex == "f")
```

Create country = scandi with pooled rates

```{r}
extinct_cohorts_scandi <- extinct_cohorts |>
  group_by(Cohort, Sex, Age, Year) |>
  summarise(Cohort_Deaths = sum(Cohort_Deaths, na.rm = TRUE),
            Exposure = sum(Exposure, na.rm = TRUE),
            .groups = 'drop') |>
  mutate(Country = "scandi")

extinct_cohorts_scandi <- bind_rows(extinct_cohorts, extinct_cohorts_scandi)
```

Last minute cleaning

```{r}
final <- extinct_cohorts_scandi |>
  rename(Deaths = Cohort_Deaths) |>
  # 2021 - 115 = 1906 (this is last extinct cohort)
  # first period available by TL/TU is 1895 (youngest old people in 1895 - 80 yr olds would be
  # from 1815 cohort)
  filter(Cohort <= 1906, Cohort >= 1815) 
```

Remove years without complete deaths

Save

```{r}
path = here("data")
write_csv(final, paste(path, "scandi_extinct_cohorts.csv", sep="/"))
```
