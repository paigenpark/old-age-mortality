---
title: "Create Validation Data"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
```

## Load in raw data

```{r}
path <- here("data") 

# idl datasets:  
fra_idl <- read.table(paste(path, "idl_fra_death_105.txt", sep='/'), sep=';', 
                         header = TRUE)
dnk_idl <- read.table(paste(path, "idl_dnk_death_105.txt", sep='/'), sep=';', 
                          header = TRUE)
nor_idl <- read.table(paste(path, "idl_nor_death_105.txt", sep='/'), sep=';', 
                         header = TRUE)
swe_idl <- read.table(paste(path, "idl_swe_death_105.txt", sep='/'), sep=';', 
                         header = TRUE)

# hmd datasets:
fra_deaths_hmd <- read.table(paste(path, "FRATNPdeath.txt", sep='/'), sep=',', 
                                header = TRUE)
fra_expo_hmd <- read.table(paste(path, "FRAExposures_1x1.txt", sep='/'), sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
fra_expo_cohort_hmd <- read.table(paste(path, "FRAcExposures_1x1.txt", sep='/'), 
                                  sep='', 
                                  header = TRUE, stringsAsFactors = FALSE, skip = 2)

dnk_deaths_hmd <- read.table(paste(path, "DNKdeath.txt", sep='/'), sep=',', 
                                header = TRUE)
dnk_expo_hmd <- read.table(paste(path, "DNKExposures_1x1.txt", sep='/'), sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
dnk_expo_cohort_hmd <- read.table(paste(path, "DNKcExposures_1x1.txt", sep='/'), 
                                  sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)

nor_deaths_hmd <- read.table(paste(path, "NORdeath.txt", sep='/'), sep=',', 
                                header = TRUE)
nor_expo_hmd <- read.table(paste(path, "NORExposures_1x1.txt", sep='/'), sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
nor_expo_cohort_hmd <- read.table(paste(path, "NORcExposures_1x1.txt", sep='/'), 
                                  sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)

swe_deaths_hmd <- read.table(paste(path, "SWEdeath.txt", sep='/'), sep=',', 
                                header = TRUE)
swe_expo_hmd <- read.table(paste(path, "SWEExposures_1x1.txt", sep='/'), sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
swe_expo_cohort_hmd <- read.table(paste(path, "SWEcExposures_1x1.txt", sep='/'), 
                                  sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)

```

```{r}
countries <- c("fra", "dnk", "nor", "swe")
```

## HMD Preparation

```{r}
# drop cases without 1x1 counts, with unknown age deaths, & with lexis rectangles rather than triangles
cleaned_deaths_list <- list()
for (country in countries) {
  data <- get(paste(country, "deaths_hmd", sep = '_'))
  years_to_remove <- data |>
    filter(
      (AgeInterval != "1" & AgeInterval != "+" & AgeInterval != ".") | 
      YearInterval != 1 | 
      Age == "UNK" |
      (Lexis != "TL" & Lexis != "TU" & Lexis != ".") |
      LDB != 1
      ) |>
    pull(unique(Year))

  cleaned_deaths_list[[country]] <- data |>
    filter(!(Year %in% years_to_remove))
}
```

```{r}
# get period death counts 
df_with_period <- lapply(cleaned_deaths_list, function(data) {
  data |>
    group_by(Age, Year, Sex) |>
    mutate(Period_Deaths = sum(Deaths)) |>
    ungroup()
  })
```

```{r}
# get cohort death counts 
df_with_cohort <- lapply(df_with_period, function(data) {
  data %>%
    arrange(Age, Sex, Year, Lexis) |>
    group_by(Age, Sex) |>
    mutate(TL_Deaths = if_else(Lexis == "TL", Deaths, NA_real_)) |>
    mutate(TU_Deaths_Next_Year = if_else(Lexis == "TU", lead(Deaths, 2), NA_real_)) |>
    mutate(TU_Deaths_Next_Year = lead(TU_Deaths_Next_Year)) |>
    mutate(Cohort_Deaths = TL_Deaths + TU_Deaths_Next_Year) |>
    ungroup()
})

# delete extra rows and columns
death_data <- lapply(df_with_cohort, function(data) {
  data |>
  filter(Lexis == "TL")  |>
  select(-TL_Deaths, -TU_Deaths_Next_Year)
  })
```

Merging function for deaths and exposure data for each country

```{r}
combine_expo_death_data <- function(death_data, expo_data) {
  expo_long <- pivot_longer(expo_data, cols = c('Female', 'Male', 'Total'),
                              names_to = "Sex", values_to = "Exposure")

  expo_long <- expo_long |>
    mutate(Sex = ifelse(Sex == "Female", "f", 
                      ifelse(Sex == "Male", "m", 
                             ifelse(Sex == "Total", "b", Sex)))) |>
    mutate(Age = ifelse(Age == "110+", "110", Age)) |>
    mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex)) |>
    filter(!Sex == 'b')
  
  deaths <- death_data |> 
    select(Year, Age, Sex, Period_Deaths, Cohort_Deaths) |>
    mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex))

  combined_df <- deaths |>
    full_join(expo_long, by = c("Year", "Age", "Sex")) 
  
  return(combined_df)
}
```

```{r}
merge_data_list <- function(data_list) {
  
  # add a column to each dataframe to identify the country
  data_list <- lapply(names(data_list), function(country) {
    df <- data_list[[country]]
    df$country <- country
    return(df)
  })
  
  merged_data <- do.call(rbind, data_list)
}
```

#### Prepare period data

```{r}
hmd_list <- list()

# merge death and exposure data for each country 
for (country in countries) {
  exposure <- get(paste(country, "expo_hmd", sep = '_'))
  deaths <- death_data[[country]]
  combined_data <- combine_expo_death_data(deaths, exposure)
  # combined_data <- combined_data |>
    # filter(!is.na(Period_Deaths))
  hmd_list[[country]] <- combined_data
}

# concatenate list 
hmd_period_data <- merge_data_list(hmd_list)
```

#### Prepare cohort data

```{r}
hmd_list <- list()

# merge death and exposure data for each country 
for (country in countries) {
  exposure <- get(paste(country, "expo_cohort_hmd", sep = '_'))
  deaths <- death_data[[country]]
  combined_data <- combine_expo_death_data(deaths, exposure)
  combined_data <- combined_data |>
    filter(!is.na(Cohort_Deaths)) |>
    filter(!is.na(Exposure)) |>
    mutate(Birth_Year = (Year - Age)) # adding birth year column
  hmd_list[[country]] <- combined_data
}

# concatenate list 
hmd_cohort_data <- merge_data_list(hmd_list)
```

## IDL Preparation

#### Prepare period data

```{r}
prep_period_idl <- function(idl_data) {
  cleaned_data <- idl_data |>
    group_by(DEATH_YEAR, AGEYEARS, SEX) |>
    summarise(Deaths = n(), .groups = 'keep') |>
    group_by(SEX, AGEYEARS) |> # regroup by sex and age
    complete(DEATH_YEAR = seq(min(DEATH_YEAR), max(DEATH_YEAR), 1),
             fill = list(Deaths = 0)) |>
    ungroup() |>
    group_by(DEATH_YEAR, AGEYEARS, SEX)
  
  return(cleaned_data)
}

idl_period_list <- list()
for (country in countries) {
  data <- get(paste(country, "idl", sep = '_'))
  cleaned_data <- prep_period_idl(data)
  idl_period_list[[country]] <- cleaned_data
}

idl_period_data <- merge_data_list(idl_period_list)
```

#### Prepare cohort data

```{r}
prep_cohort_idl <- function(idl_data) {
  cleaned_data <- idl_data |>
    group_by(BIRTH_YEAR, AGEYEARS, SEX) |>
    summarise(Deaths = n())
  return(cleaned_data)
}

idl_cohort_list <- list()
for (country in countries) {
  data <- get(paste(country, "idl", sep = '_'))
  cleaned_data <- prep_cohort_idl(data)
  idl_cohort_list[[country]] <- cleaned_data
}

idl_cohort_data <- merge_data_list(idl_cohort_list)
```

#### Check consistency between IDL and HMD

TODO: Need to come back and aggregate the IDL values after 2004 for France when death counts in the HMD input data switch to 105+

```{r}
sum_idl_deaths <- function(data) {
  print(data)
  filtered_data <- data |>
    filter(Year >= 2005, country == "fra") |>
    group_by(Year, Sex, country) |>
    summarise(Deaths = sum(Deaths))
  print(filtered_data)
  return(filtered_data)
}

replace_and_clean_deaths <- function(data, summarized_data) {
 
  # Replace Deaths for Age == 105
  data <- data %>%
    left_join(summarized_data, by = c("Year", "Sex", "country"))
   
  data <- data %>%
    mutate(Deaths = if_else(!is.na(Deaths.y), Deaths.y, Deaths.x)) %>%
    select(-Deaths.y, -Deaths.x)
  
  # Remove rows where Age > 105 for the matching cases
  data <- data %>%
    filter(!(Year %in% summarized_data$Year & 
             Sex %in% summarized_data$Sex & 
             country %in% summarized_data$country & 
             Age > 105))
  
  return(data)
}

create_data_for_comparison <- function(hmd_data, idl_data, sum_idl_deaths_fn, replace_and_clean_deaths) {
  idl_data <- idl_data |>
    rename(
      Year = DEATH_YEAR,
      Sex = SEX,
      Age = AGEYEARS
    ) |>
    mutate(Sex = ifelse(Sex == "F", "f", 
                      ifelse(Sex == "M", "m", Sex))) 
  
  joined_data <- hmd_data |>
    left_join(idl_data, by = c("Year", "country", "Sex", "Age")) |>
    filter(Age >= 105) |>
    filter(!is.na(Deaths)) |>
    filter(country != "swe") |>
    filter(country != "nor")
  
  summarized_data <- sum_idl_deaths_fn(joined_data)
  joined_data <- replace_and_clean_deaths(joined_data, summarized_data)

  # add difference column
  joined_data <- joined_data |>
    mutate(difference = (Period_Deaths - Deaths))

  return(joined_data)
}

data_for_comparison <- create_data_for_comparison(hmd_period_data, idl_period_data, sum_idl_deaths, replace_and_clean_deaths)

```

```{r}
library(viridis)
ggplot(data_for_comparison, aes(x=Year, y=difference, color=as.factor(Age))) +
  geom_point(alpha = 3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  facet_wrap(~ country + Sex, scales = "free") +
  theme_minimal() +
  scale_color_viridis_d() +
  labs(color = "Age") +
  labs(y="Difference in Death Counts (HMD-IDL)",
       title="Difference in HMD and IDL Death Counts Over Time | Denmark and France")
  
```

## Create period validation dataset

```{r}
create_period_val_data <- function(hmd_data, idl_data) {
  idl_data <- idl_data |>
    rename(
      Year = DEATH_YEAR,
      Sex = SEX,
      Age = AGEYEARS
    ) |>
    mutate(Sex = ifelse(Sex == "F", "f", 
                      ifelse(Sex == "M", "m", Sex)))
  
  combos_to_keep <- idl_data |>
    select(Year, country) |>
    distinct()
  
  joined_data <- hmd_data |>
    full_join(idl_data, by = c("Year", "country", "Sex", "Age")) |>
    semi_join(combos_to_keep, by = c("Year", "country"))

  # replace Deaths values in hmd_data with those from idl_data
  joined_data <- joined_data |>
    mutate(Period_Deaths = if_else(!is.na(Deaths), Deaths, Period_Deaths)) |>
    select(-Deaths, -Cohort_Deaths)

  return(joined_data)
}
```

```{r}
period_val <- create_period_val_data(hmd_period_data, idl_period_data)
```

## Create cohort validation dataset

```{r}
create_cohort_val_data <- function(hmd_data, idl_data) {
  idl_data <- idl_data |>
      rename(
        Birth_Year = BIRTH_YEAR,
        Sex = SEX,
        Age = AGEYEARS
      ) |>
      mutate(Sex = ifelse(Sex == "F", "f", 
                        ifelse(Sex == "M", "m", Sex)))
    
    print(head(idl_data))
    
    joined_data <- hmd_data |>
      left_join(idl_data, by = c("Birth_Year", "country", "Sex", "Age"))
    
    print(head(joined_data))
  
    # replace Deaths values in hmd_data with those from idl_data
    joined_data <- joined_data |>
      mutate(Cohort_Deaths = if_else(!is.na(Deaths), Deaths, Cohort_Deaths)) |>
      select(-Deaths, -Period_Deaths)
      
    print(head(joined_data))
    return(joined_data)
  }
```

```{r}
cohort_val <- create_cohort_val_data(hmd_cohort_data, idl_cohort_data)
```

## Check data quality

#### Compare validation death rates to HMD Mx

Load in Mx data

```{r}
# read in Mx data from HMD
fra_period_mx <- read.table(paste(path, "FRAMx_1x1.txt", sep='/'), 
                                 sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
fra_cohort_mx <- read.table(paste(path, "FRAcMx_1x1.txt", sep='/'), 
                                 sep='', 
                              header = TRUE, stringsAsFactors = FALSE, skip = 2)
```

Period checks for France

```{r}
# compare to Mx from period and cohort datasets I've created 
period_val_with_mx <- period_val |>
  mutate(Mx = (Period_Deaths / Exposure)) |>
  filter(country == "fra")
```

```{r}
combine_mx_death_data <- function(my_mx_data, hmd_mx_data) {
  hmd_mx_data <- pivot_longer(hmd_mx_data, cols = c('Female', 'Male', 'Total'),
                              names_to = "Sex", values_to = "Mx_hmd")

  hmd_mx_data <- hmd_mx_data |>
    mutate(Sex = ifelse(Sex == "Female", "f", 
                      ifelse(Sex == "Male", "m", 
                             ifelse(Sex == "Total", "b", Sex)))) |>
    mutate(Age = ifelse(Age == "110+", "110", Age)) |>
    mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex)) |>
    filter(!Sex == 'b')

  
  my_mx_data <- my_mx_data |> 
    select(Year, Age, Sex, Mx) |>
    mutate(Year = as.integer(Year), Age = as.integer(Age), Sex = as.character(Sex))

  combined_df <- my_mx_data |>
    full_join(hmd_mx_data, by = c("Year", "Age", "Sex")) 
  
  return(combined_df)
}
```

```{r}
combined_mx <- combine_mx_death_data(period_val_with_mx, fra_period_mx)
combined_mx$Mx <- round(combined_mx$Mx, digits = 6)
combined_mx <- combined_mx |>
  mutate(difference = (as.numeric(Mx_hmd) - Mx))
```

#### Data quality visualizations

```{r}
ggplot(combined_mx, aes(x=Year, y=difference, color=Age)) +
  geom_point(alpha = 3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  facet_wrap(~ Sex, scales = "free") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(color = "Age") +
  labs(y="Difference between HMD and Validation Mortality Rates") +
  ggtitle("Difference between HMD Mortality Rates and \n Raw Validation Rates for All Ages in France")
```

```{r}
combined_mx_younger <- combined_mx |>
  filter(Age <= 79) |>
  # removing very small deviation from 0 
  mutate(difference = ifelse((difference <= 0.00001), 0, difference))

ggplot(combined_mx_younger, aes(x=Year, y=difference, color=Age)) +
  geom_point(alpha = 3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  facet_wrap(~ Sex, scales = "free") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(color = "Age") +
  labs(y="Difference between HMD and Validation Mortality Rates") +
  ggtitle("Difference between HMD Mortality Rates and \n Raw Validation Rates for Unsmoothed Ages in France")
```

## Final cleaning

Restrict data to 80+

```{r}
period_val <- period_val |>
  filter(Age >= 80) |>
  arrange(country, Year, Age, Sex) 

cohort_val <- cohort_val |>
  filter(Age >= 80) |>
  arrange(country, Birth_Year, Age, Sex) 
```

Remove rows with missing ages between 80 and 104

```{r}
rows_with_missing_ages <- period_val %>%
    group_by(Year, Sex, country) %>%
    summarise(
      missing_ages = all(!80:104 %in% Age)
    ) %>%
    filter(missing_ages) %>%
    ungroup()

period_val <- period_val %>%
    rowwise() %>%
    filter(!(country %in% rows_with_missing_ages$country &
             Year %in% rows_with_missing_ages$Year &
             Sex %in% rows_with_missing_ages$Sex)) %>%
    ungroup()
```

## Save data files

```{r}
write_csv(period_val, paste(path, "period_validation_data.csv", sep="/"))
write_csv(cohort_val, paste(path, "cohort_validation_data.csv", sep="/"))
```
