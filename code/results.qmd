---
title: "Smoothing Model Reboot: Revisiting Kannisto for Old Age Mortality Smoothing in the HMD"
format: pdf
editor: visual
execute: 
  echo: false
---

## Introduction

#### Plateau vs. No Plateau Debate

#### Overview of modeling literature (Linh and Nadine's work) 

-   Kannisto tends to not perform as well as some other models

#### HMD Smoothing Procedure 

-   Literature suggests reevaluation needed

## Methods

#### Data 

#### Approach

## Results

```{r, include=FALSE}
library(here)
library(tidyverse)
library(testthat)
path <- here("code")
```

```{r}
# source and test functions
source(paste(path, "model_fitting_functions_cohort.R", sep='/'))
# test_file(paste(path, "unit_testing_rates.R", sep='/'))
```

```{r, include=FALSE}
# load in prepared data
data_path <- here("data")
swe_data <- read_csv(paste(data_path, "swe_extinct_cohorts.csv", sep='/'))
fra_data <- read_csv(paste(data_path, "french_data.csv", sep='/'))
```

```{r}
swe_data <- swe_data |>
  mutate(Country = "swe") 

fra_data <- fra_data |>
  mutate(Country = "fra")

data <- bind_rows(swe_data, fra_data)
```

```{r}
# get rid of any NAs before fitting 
data <- data |>
  filter(!is.na(Deaths)) |>
  mutate(Exposure = if_else(is.na(Exposure), 0, Exposure)) 
```

```{r}
cohort_data_with_mx <- data |>
  mutate(raw_mx = Deaths / Exposure)
```

```{r}
# fit kannisto model
kannisto_fit <- fit_all_kannisto(cohort_data_with_mx)
```

```{r}
kannisto_fit <- kannisto_fit |>
  mutate(fitted_rates = map(fitted_rates, ~ as.data.frame(.) %>%
                              rename(fitted_rates_Mx = Mx, fitted_rates_x = x)))
```

```{r}
cohorts_to_plot = c(1875, 1880, 1890, 1900)

kannisto_filtered <- kannisto_fit |>
  filter(Cohort %in% cohorts_to_plot, Sex == "f") |>
  unnest(fitted_rates) |>
  rename(my_kannisto_mx = fitted_rates_Mx)
```

```{r, eval=FALSE}
ggplot(kannisto_filtered, aes(x = fitted_rates_x, y = my_kannisto_mx)) +
  geom_line() +
  labs(# title = "Comparison of HMD and My Fit",
       x = "Age",
       y = "Rates") +
  theme_minimal() +
  facet_wrap(~ Cohort, scales = "free_y") 
```

```{r}
# fit beard model
beard_fit <- fit_all_beard(cohort_data_with_mx)
```

```{r}
beard_fit <- beard_fit |>
  mutate(fitted_rates = map(fitted_rates, ~ as.data.frame(.) %>%
                              rename(fitted_rates_Mx = Mx, fitted_rates_x = x)))
```

```{r}
beard_filtered <- beard_fit |>
  filter(Cohort %in% cohorts_to_plot, Sex == "f") |>
  unnest(fitted_rates) |>
  rename(beard_mx = fitted_rates_Mx)
```

```{r}
joint_filtered <- cbind(kannisto_filtered, beard_filtered)

joint_filtered <- pivot_longer(joint_filtered, cols = c(my_kannisto_mx, beard_mx), 
                               names_to = "Type", values_to = "Rate")

if (anyDuplicated(names(joint_filtered)) > 0) {
  names(joint_filtered) <- make.unique(names(joint_filtered))
}
```

```{r, eval=FALSE}
custom_labels <- c("my_kannisto_mx" = "My Kannisto Rates", "beard_mx" = "Beard")

ggplot(joint_filtered, aes(x = fitted_rates_x, y = Rate, color = Type, group = Type)) +
  geom_line(linewidth = 1) +
  labs(# title = "Comparison of HMD and My Fit",
       x = "Age",
       y = "Rate",
       color = "Legend") +
  theme_minimal() +
  facet_wrap(~ Cohort, scales = "free_y") +
  scale_color_manual(values = c("my_kannisto_mx" = "red", "beard_mx" = "blue"),
                     labels = custom_labels)
```

```{r}
# fit gompertz model
gompertz_fit <- fit_all_gompertz(cohort_data_with_mx)
```

```{r}
gompertz_fit <- gompertz_fit |>
  mutate(fitted_rates = map(fitted_rates, ~ as.data.frame(.) %>%
                              rename(fitted_rates_Mx = Mx, fitted_rates_x = x)))
```

```{r}
makeham_fit <- fit_all_makeham(cohort_data_with_mx)
makeham_fit <- makeham_fit |>
  mutate(fitted_rates = map(fitted_rates, ~ as.data.frame(.) %>%
                              rename(fitted_rates_Mx = Mx, fitted_rates_x = x)))
```

```{r}
lq_fit <- fit_all_lq(cohort_data_with_mx)
lq_fit <- lq_fit |>
  mutate(fitted_rates = map(fitted_rates, ~ as.data.frame(.) %>%
                              rename(fitted_rates_Mx = Mx, fitted_rates_x = x)))
```

### Sample of Cohort Model Fits for France and Sweden

#### France Results

```{r}
cohorts_to_plot = c(1873, 1877, 1881, 1885, 1889, 1893, 1897, 1901, 1905)
country = "fra"
sex = "f"
fitted_models <- list(kannisto = kannisto_fit, beard = beard_fit, 
                      gompertz = gompertz_fit, makeham = makeham_fit,
                      lq = lq_fit)
filtered_data <- list()

for (i in seq_along(fitted_models)) {
  model_name <- names(fitted_models)[i]
  model <- fitted_models[[i]]
  model_filtered <- model |>
    filter(Country == country, Cohort %in% cohorts_to_plot, Sex == sex) |>
    unnest(fitted_rates) #|>
    #rename(!!paste(model_name, "mx", sep = "_") := fitted_rates_Mx)
  
  filtered_data[[model_name]] <- model_filtered
}

filtered_smoothed <- do.call(cbind, filtered_data)

filtered_smoothed <- filtered_smoothed |>
  rename(Cohort = kannisto.Cohort, Age = kannisto.fitted_rates_x)
```

```{r}
filtered_raw <- cohort_data_with_mx |>
  filter(Cohort %in% cohorts_to_plot, Sex == sex, Country == country) |>
  arrange(Cohort, Age) 
```

```{r}
joint_filtered <- full_join(filtered_smoothed, filtered_raw, by = c("Cohort", "Age"))

joint_filtered <- pivot_longer(joint_filtered, cols = c(kannisto.fitted_rates_Mx, 
                                                        beard.fitted_rates_Mx, 
                                                        gompertz.fitted_rates_Mx,
                                                        makeham.fitted_rates_Mx,
                                                        lq.fitted_rates_Mx,
                                                        raw_mx), 
                               names_to = "Type", values_to = "Rate")

if (anyDuplicated(names(joint_filtered)) > 0) {
  names(joint_filtered) <- make.unique(names(joint_filtered))
}
```

```{r, fig.cap="France Mortality Rates Plotted with Model Fits", warning=FALSE}
custom_labels <- c("kannisto.fitted_rates_Mx" = "Kannisto", 
                   "beard.fitted_rates_Mx" = "Beard", 
                   "gompertz.fitted_rates_Mx" = "Gompertz", 
                   "makeham.fitted_rates_Mx" = "Makeham",
                   "lq.fitted_rates_Mx" = "Log-Quadratic",
                   "raw_mx" = "Raw rates")

ggplot(joint_filtered, aes(x = Age, y = Rate, color = Type, group = Type)) +
  geom_line(data = subset(joint_filtered, Type != "raw_mx")) +
  geom_point(data = subset(joint_filtered, Type == "raw_mx"), size = 1) +
  labs(#title = "France",
       x = "Age",
       y = "Rates",
       color = "Legend") +
  theme_minimal() +
  facet_wrap(~ Cohort, scales = "free_y") +
  scale_color_manual(values = c("kannisto.fitted_rates_Mx" = "blue",
                                "beard.fitted_rates_Mx" = "black", 
                                "gompertz.fitted_rates_Mx" = "red",
                                "makeham.fitted_rates_Mx" = "green",
                                "lq.fitted_rates_Mx" = "pink",
                                "raw_mx" = "grey"),
                     labels = custom_labels)
```

Figure 1 shows data and models for a sample of extinct cohorts between 1873 and 1906. Grey points represent the mortality rates calculated from French vital statistics on deaths and exposures calculated through the extinct cohort method. Models include Beard, Gompertz, Kannisto, Log-Quadratic, and Makeham. All models follow the data and each other closely until ages in the late 90s are reached. From there models diverge quite drastically.

#### Sweden Results

```{r}
country = "swe"
sex = "f"
fitted_models <- list(kannisto = kannisto_fit, beard = beard_fit, 
                      gompertz = gompertz_fit, makeham = makeham_fit,
                      lq = lq_fit)
filtered_data <- list()

for (i in seq_along(fitted_models)) {
  model_name <- names(fitted_models)[i]
  model <- fitted_models[[i]]
  model_filtered <- model |>
    filter(Country == country, Cohort %in% cohorts_to_plot, Sex == sex) |>
    unnest(fitted_rates) #|>
    #rename(!!paste(model_name, "mx", sep = "_") := fitted_rates_Mx)
  
  filtered_data[[model_name]] <- model_filtered
}

filtered_smoothed <- do.call(cbind, filtered_data)

filtered_smoothed <- filtered_smoothed |>
  rename(Cohort = kannisto.Cohort, Age = kannisto.fitted_rates_x)

joint_filtered <- full_join(filtered_smoothed, filtered_raw, by = c("Cohort", "Age"))

joint_filtered <- pivot_longer(joint_filtered, cols = c(kannisto.fitted_rates_Mx, 
                                                        beard.fitted_rates_Mx, 
                                                        gompertz.fitted_rates_Mx,
                                                        makeham.fitted_rates_Mx,
                                                        lq.fitted_rates_Mx,
                                                        raw_mx), 
                               names_to = "Type", values_to = "Rate")

if (anyDuplicated(names(joint_filtered)) > 0) {
  names(joint_filtered) <- make.unique(names(joint_filtered))
}
```

```{r}
filtered_raw <- cohort_data_with_mx |>
  filter(Cohort %in% cohorts_to_plot, Sex == sex, Country == country) |>
  arrange(Cohort, Age) 
```

```{r}
joint_filtered <- full_join(filtered_smoothed, filtered_raw, by = c("Cohort", "Age"))

joint_filtered <- pivot_longer(joint_filtered, cols = c(kannisto.fitted_rates_Mx, 
                                                        beard.fitted_rates_Mx, 
                                                        gompertz.fitted_rates_Mx,
                                                        makeham.fitted_rates_Mx,
                                                        lq.fitted_rates_Mx,
                                                        raw_mx), 
                               names_to = "Type", values_to = "Rate")

if (anyDuplicated(names(joint_filtered)) > 0) {
  names(joint_filtered) <- make.unique(names(joint_filtered))
}
```

```{r, fig.cap="Sweden Mortality Rates Plotted with Model Fits", warning=FALSE}
ggplot(joint_filtered, aes(x = Age, y = Rate, color = Type, group = Type)) +
  geom_line(data = subset(joint_filtered, Type != "raw_mx")) +
  geom_point(data = subset(joint_filtered, Type == "raw_mx"), size = 1) +
  labs(title = "Sweden",
       x = "Age",
       y = "Rates",
       color = "Legend") +
  theme_minimal() +
  facet_wrap(~ Cohort, scales = "free_y") +
  scale_color_manual(values = c("kannisto.fitted_rates_Mx" = "blue",
                                "beard.fitted_rates_Mx" = "black", 
                                "gompertz.fitted_rates_Mx" = "red",
                                "makeham.fitted_rates_Mx" = "green",
                                "lq.fitted_rates_Mx" = "pink",
                                "raw_mx" = "grey"),
                     labels = custom_labels)
```

### Model Performance

```{r}
beard_fit <- beard_fit |>
  mutate(model = "Beard")

kannisto_fit <- kannisto_fit |>
  mutate(model = "Kannisto")

gompertz_fit <- gompertz_fit |>
  mutate(model = "Gompertz")

makeham_fit <- makeham_fit |>
  mutate(model = "Makeham")

lq_fit <- lq_fit |>
  mutate(model = "L-Q")

combined_results <- bind_rows(beard_fit, kannisto_fit, gompertz_fit, makeham_fit, lq_fit)
```

```{r}
# ggplot(combined_results, aes(x = model, y = AIC, fill = Sex)) +
#   geom_boxplot() +
#   facet_wrap(~ Sex) +
#   theme_minimal()
```

```{r}
# ggplot(combined_results, aes(x = model, y = BIC, fill = Sex)) +
#   geom_boxplot() +
#   facet_wrap(~ Sex) +
#   theme_minimal()
```

Create figure with change in AIC and see if distinctions are more obvious

```{r}
combined_results_changeAIC <- combined_results |>
  group_by(Cohort, Sex, Country) |>
  mutate(change_aic = AIC - min(AIC)) |>
  mutate(change_aic = if_else(change_aic == 0, .Machine$double.eps, change_aic)) |>
  mutate(log10_change_AIC = log10(change_aic)) |>
  ungroup()
```

#### Sweden AIC Results

```{r}
swe_1900 <- combined_results_changeAIC
knitr::kable(cohort_1900, format = 'pandoc', caption = 'Title of the table')
```

```{r, fig.cap="Logarithm of the difference in AIC between the best performing model for each cohort and the model in question for Swedish cohorts. Each model's boxplot represents the distribution of $\\Delta$AIC across all Swedish cohorts. Lower values of $log_{10}(\\Delta)$AIC imply a better fit.", warning=FALSE}
swe_aic <- combined_results_changeAIC |>
  filter(Country == "swe")

ggplot(swe_aic, aes(x = model, y = log10_change_AIC, fill = Sex)) +
  geom_boxplot() +
  facet_wrap(~ Sex) +
  theme_minimal()
```

#### France AIC Results

```{r, fig.cap="Logarithm of the difference in AIC between the best performing model for each cohort and the model in question for French cohorts. Each model's boxplot represents the distribution of $\\Delta$AIC across all French cohorts. Lower values of $log_{10}(\\Delta)$AIC imply a better fit."}
fra_aic <- combined_results_changeAIC |> 
  filter(Country == "fra")

ggplot(fra_aic, aes(x = model, y = log10_change_AIC, fill = Sex)) +
  geom_boxplot() +
  facet_wrap(~ Sex) +
  theme_minimal()
```

## Discussion and Conclusion
